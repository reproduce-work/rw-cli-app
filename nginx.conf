user  nginx;
worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    server {
        listen       80;
        server_name  localhost;

        location ~ ^/_rw/(?<path>.*) {
            alias /usr/share/nginx/_rw/$path;
        }

        location ~ ^/_rwapp/(?<path>.*) {
            alias /usr/share/nginx/_rwapp/$path;
        }
        
        location ~ ^/_rwproj/(?<path>.*) {
            alias /usr/share/nginx/_rwproj/$path;
        }

        location / {
            proxy_pass http://rw-target:8888/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host:$server_port;
            proxy_set_header X-Forwarded-Port $server_port;

            # Additional CORS headers
            add_header 'Access-Control-Allow-Origin' '*';

            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Inject custom HTML, CSS, and JS
            sub_filter '</body>' '<script src="/_rwapp/index.js"></script></body>';
            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="/_rw/styles.css"></head>';
            sub_filter_once on;

            sub_filter_types *;
            sub_filter_last_modified on;
            
        }
            

        # llm api
        #location /api/llm {
        #    proxy_pass http://rw-api-llm:3000; 
        #    proxy_http_version 1.1;
        #    proxy_set_header Upgrade $http_upgrade;
        #    proxy_set_header Connection 'upgrade';
        #    proxy_set_header Host $host;
        #    proxy_cache_bypass $http_upgrade;
        #}

    }
}
